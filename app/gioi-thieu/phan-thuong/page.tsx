"use client"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Award, Star, Medal, Trophy } from "lucide-react"
import { useEffect, useState } from "react"
import { awardService } from "@/services/awards.service"
import * as React from "react"
export default function AwardsPage() {
  const [awards, setAwards] = useState([
    {
      id: 1,
      name: "Danh hi·ªáu ƒê∆°n v·ªã Anh h√πng L·ª±c l∆∞·ª£ng v≈© trang nh√¢n d√¢n",
      year: "1980",
      description: "ƒê∆∞·ª£c trao t·∫∑ng v√¨ nh·ªØng th√†nh t√≠ch xu·∫•t s·∫Øc trong chi·∫øn ƒë·∫•u b·∫£o v·ªá T·ªï qu·ªëc",
      icon: Trophy,
      color: "text-yellow-600",
      bgColor: "bg-yellow-50",
      level: "Cao nh·∫•t",
    },
    {
      id: 2,
      name: "Hu√¢n ch∆∞∆°ng Qu√¢n c√¥ng h·∫°ng Nh·∫•t",
      year: "1975",
      description: "Ghi nh·∫≠n c√¥ng lao to l·ªõn trong kh√°ng chi·∫øn ch·ªëng M·ªπ c·ª©u n∆∞·ªõc",
      icon: Medal,
      color: "text-red-600",
      bgColor: "bg-red-50",
      level: "H·∫°ng Nh·∫•t",
    },
    {
      id: 3,
      name: "Hu√¢n ch∆∞∆°ng B·∫£o v·ªá T·ªï qu·ªëc h·∫°ng Nh·∫•t",
      year: "2015",
      description: "Th√†nh t√≠ch xu·∫•t s·∫Øc trong nhi·ªám v·ª• b·∫£o v·ªá v√πng tr·ªùi T·ªï qu·ªëc",
      icon: Award,
      color: "text-blue-600",
      bgColor: "bg-blue-50",
      level: "H·∫°ng Nh·∫•t",
    },
    {
      id: 4,
      name: "Hu√¢n ch∆∞∆°ng Chi·∫øn c√¥ng h·∫°ng Nh√¨",
      year: "1979",
      description: "Chi·∫øn c√¥ng trong cu·ªôc chi·∫øn tranh b·∫£o v·ªá bi√™n gi·ªõi ph√≠a B·∫Øc",
      icon: Star,
      color: "text-green-600",
      bgColor: "bg-green-50",
      level: "H·∫°ng Nh√¨",
    },
    {
      id: 5,
      name: "C·ªù thi ƒëua c·ªßa Ch√≠nh ph·ªß",
      year: "2020",
      description: "ƒê∆°n v·ªã d·∫´n ƒë·∫ßu trong phong tr√†o thi ƒëua y√™u n∆∞·ªõc",
      icon: Award,
      color: "text-purple-600",
      bgColor: "bg-purple-50",
      level: "Xu·∫•t s·∫Øc",
    },
    {
      id: 6,
      name: "B·∫±ng khen c·ªßa Th·ªß t∆∞·ªõng Ch√≠nh ph·ªß",
      year: "2022",
      description: "Th√†nh t√≠ch trong c√¥ng t√°c ph√≤ng ch·ªëng d·ªãch COVID-19",
      icon: Medal,
      color: "text-orange-600",
      bgColor: "bg-orange-50",
      level: "ƒê·∫∑c bi·ªát",
    },
  ])

  const [statistics, setStatistics] = useState([
    { label: "T·ªïng s·ªë ph·∫ßn th∆∞·ªüng", value: "45+", icon: Trophy },
    { label: "Hu√¢n ch∆∞∆°ng Nh√† n∆∞·ªõc", value: "5", icon: Medal },
    { label: "B·∫±ng khen c√°c c·∫•p", value: "28", icon: Award },
    { label: "Danh hi·ªáu t·∫≠p th·ªÉ", value: "5", icon: Star },
  ])

  const fetchData = async () => {
    const res = await awardService.getAwards()
    if (res.statusCode === 200) {
      setAwards(res.data)
    }
  }

  useEffect(() => {
    fetchData()
  }, [])
  return (
    <div className="space-y-8">
      <div className="text-center mb-8">
        <h1 className="text-4xl font-bold text-gray-800 mb-4">C√°c ph·∫ßn th∆∞·ªüng cao qu√Ω</h1>
        <p className="text-lg text-gray-600 max-w-3xl mx-auto">
          Nh·ªØng ph·∫ßn th∆∞·ªüng, danh hi·ªáu cao qu√Ω m√† S∆∞ ƒëo√†n ph√≤ng kh√¥ng 375 ƒë√£ ƒë∆∞·ª£c ƒê·∫£ng, Nh√† n∆∞·ªõc v√† nh√¢n d√¢n trao t·∫∑ng
        </p>
      </div>

      {/* Statistics */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12">
        {statistics.map((stat, index) => (
          <Card key={index} className="text-center hover:shadow-lg transition-shadow">
            <CardContent className="p-6">
              <div className="w-16 h-16 bg-gradient-to-br from-red-500 to-red-600 rounded-full flex items-center justify-center mx-auto mb-4">
                <Trophy className="h-8 w-8 text-white" />
              </div>
              <div className="text-3xl font-bold text-gray-800 mb-2">{stat.value}</div>
              <div className="text-sm text-gray-600">{stat.label}</div>
            </CardContent>
          </Card>
        ))}
      </div>

      {/* Awards Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {awards.map((award) => {
          const Icon = award.icon; // üëà d√πng bi·∫øn PascalCase
          return (

            <Card
              key={award.id}
              className={`hover:shadow-xl transition-all duration-300 border-l-4 border-l-current`}
              style={{ borderLeftColor: 'rgb(206 83 74)' }}
            // style={{background: `${award.bgColor}`,color:`${award.color}`}}
            >
              <CardHeader className="pb-4">
                <div className="flex items-start justify-between">
                  <div className={`w-8 h-8 rounded-full flex items-center justify-center border-2 border-white shadow-md`}>
                    <Trophy className={`h-4 w-4 ${award.color}`} style={{ color: `${award.color}` }} />

                  </div>
                  <Badge variant="outline">
                    {award.level}
                  </Badge>
                </div>
                <CardTitle className="text-lg line-clamp-2">{award.name}</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3 m-5">
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-gray-600">NƒÉm nh·∫≠n:</span>
                    <Badge variant="secondary">{award.year}</Badge>
                  </div>
                  <p className="text-gray-700 text-sm line-clamp-3">{award.description}</p>
                </div>
              </CardContent>
            </Card>
          );

        })}
      </div>

      {/* Timeline of Major Awards */}
      <Card className="mt-12">
        <CardHeader>
          <CardTitle className="flex items-center">
            <Trophy className="h-6 w-6 mr-2 text-yellow-600" />
            D√≤ng th·ªùi gian c√°c ph·∫ßn th∆∞·ªüng quan tr·ªçng
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="relative">
            <div className="absolute left-4 top-0 bottom-0 w-0.5 bg-gray-300"></div>
            <div className="space-y-6">
              {awards.slice(0, 4).map((award, index) => (
                <div key={index} className="relative flex items-start space-x-4">
                  <div
                    className={`w-8 h-8 rounded-full flex items-center justify-center border-2 border-white shadow-md`}
                    // style={{ background: `${award.bgColor}` }}
                  >
                    <Trophy className={`h-4 w-4 ${award.color}`} style={{ color: `${award.color}` }} />
                  </div>
                  <div className="flex-1 min-w-0">
                    <div className="flex items-center space-x-2 mb-1">
                      <h4 className="font-semibold text-gray-800">{award.name}</h4>
                      <Badge variant="outline" className="text-xs">
                        {award.year}
                      </Badge>
                    </div>
                    <p className="text-sm text-gray-600">{award.description}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Call to Action */}
      <Card className="bg-gradient-to-r from-red-600 to-red-700 text-white">
        <CardContent className="p-8 text-center">
          <Trophy className="h-16 w-16 mx-auto mb-4 text-yellow-300" />
          <h3 className="text-2xl font-bold mb-4">Ti·∫øp t·ª•c ph·∫•n ƒë·∫•u v√¨ nh·ªØng vinh quang m·ªõi</h3>
          <p className="text-red-100 max-w-2xl mx-auto">
            V·ªõi truy·ªÅn th·ªëng v·∫ª vang v√† nh·ªØng th√†nh t√≠ch ƒë√£ ƒë·∫°t ƒë∆∞·ª£c, S∆∞ ƒëo√†n ph√≤ng kh√¥ng 375 ti·∫øp t·ª•c ph·∫•n ƒë·∫•u ƒë·ªÉ x·ª©ng
            ƒë√°ng v·ªõi s·ª± tin t∆∞·ªüng c·ªßa ƒê·∫£ng, Nh√† n∆∞·ªõc v√† nh√¢n d√¢n.
          </p>
        </CardContent>
      </Card>
    </div>
  )
}
